Introdução a Go

Rodrigo Chacon
Desenvolvedor no Titans Group
@rochacon

* Um pouco de história

Go foi criado devido a frustração com as linguagens e ambientes existentes na época (~2008). Programar se tornou dificil e parte do problema eram as linguagens disponiveis.
O desejo e primeiras ideias de uma nova linguagem começaram em Setembro de 2007 por Robert Griesemer, Rob Pike e Ken Thompson.

A versão 1.0 de Go foi lançada em 10 de Novembro de 2009.

Go conta com mais de 400 contribuidores.

* 

.image ./images/compiling.png

* Por que Go?

O objetivo de Go é combinar a facilidade de programação de linguagens de tipagem dinâmica com a eficiência e segurança de linguagens de tipagem estática. Com um bom suporte a networking e multicore.

Go também deve ser rápido! Deve ser capaz de compilar projetos grandes em segundos.

* Go é

- Compilado
- Tipado estáticamente
- Sintaxe simples e limpa
- Sistema de tipos simples
- Concurrency primitives
- Batteries included
- Garbage collected
- Ferramentas 
- Deployment fácil
- Open source

* Quem está usando Go?

- Docker (dotCloud)
- JuJu (Canonical)
- Tsuru (Globo.com)
- Heroku
- Mozilla
- CloudFlare
- Bit.ly
- SoundCloud

* Hello world

.play ./code/hello.go

* Tooling

- go doc
- go fmt
- go fix
- go get
- go test (na versão 1.2 também adiciona coverage)
- go help para ver os demais comandos =P

* Servidor HTTP

- DoS hardened
- Serve o conteúdo do dl.google.com

.play ./code/http-server.go

* Testing

TODO

* Concurrency

- Goroutines
- Channels
- *sync* package

* Goroutines

Goroutines são *lightweight threads* gerenciadas pelo runtime do Go.
Para rodar uma função em uma nova Goroutine, coloque `go` antes da chamada da função.

.play ./code/goroutines.go

* Concurrency: channels

FIXME
Channels são 

.play ./code/async1.go


* Concurrency: sync package

.play ./code/sync.go

* FIXME Go no Brasil?

TODO

* Dúvidas?

TODO add fun image

* Links

- golang.org
- talks.golang.org
- tour.golang.org

